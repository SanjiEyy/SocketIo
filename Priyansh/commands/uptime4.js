const os = require('os');
const si = require('systeminformation');
const prettyMs = require('pretty-ms');

module.exports.config = {
    name: "uptime4",
    version: "1.0.0",
    hasPermssion: 0,
    creditss: "datoccho",
    description: "Show system and bot uptime information",
    commandCategory: "system",
    usages: "",
    cooldowns: 5
};

module.exports.run = async ({ api, event }) => {
    const { threadID, messageID } = event;

    // Get system information
    const osInfo = await si.osInfo();
    const cpu = await si.cpu();
    const currentLoad = await si.currentLoad();
    const mem = await si.mem();
    const disk = await si.fsSize();
    const networkInterfaces = os.networkInterfaces();

    // Format network information
    const ipv4Addresses = [];
    const ipv6Addresses = [];
    const macAddresses = [];
    for (let iface of Object.values(networkInterfaces)) {
        for (let info of iface) {
            if (info.family === 'IPv4') ipv4Addresses.push(info.address);
            if (info.family === 'IPv6') ipv6Addresses.push(info.address);
            macAddresses.push(info.mac);
        }
    }

    // Get uptime information
    const botUptime = process.uptime();
    const serverUptime = os.uptime();

    // Format the message
    const message = `
­Юљњ­ЮљГ­Юљџ­ЮљГ­Юљ«­Юљг & ­ЮљЇ­Юљъ­ЮљГ­Юљ░­Юље­ЮљФ­Юљц ­Юљѕ­ЮљД­ЮљЪ­Юље­ЮљФ­Юљд­Юљџ­ЮљГ­Юљб­Юље­ЮљД
----------------------
РџЎ  ­Юљњ­Юљ▓­Юљг­ЮљГ­Юљъ­Юљд ­Юљѕ­ЮљД­ЮљЪ­Юље­ЮљФ­Юљд­Юљџ­ЮљГ­Юљб­Юље­ЮљД:
  ­Юљј­Юљњ: ${osInfo.distro} ${osInfo.release}
  ­Юљі­Юљъ­ЮљФ­ЮљД­Юљъ­ЮљЦ ­ЮљЋ­Юљъ­ЮљФ­Юљг­Юљб­Юље­ЮљД: ${osInfo.kernel}
  ­ЮљЄ­Юље­Юљг­ЮљГ­ЮљД­Юљџ­Юљд­Юљъ: ${os.hostname()}
  ­Юљђ­ЮљФ­Юљю­ЮљА: ${os.arch()}
  ­Юљѓ­ЮљЈ­Юљћ: ${cpu.manufacturer} ${cpu.brand} @ ${cpu.speed}GHz (${cpu.cores} cores)
  ­ЮљІ­Юље­Юљџ­ЮљЮ ­Юљђ­Юљ»­Юља: ${currentLoad.avgload.toFixed(2)}%
----------------------
­Ъїљ ­ЮљЇ­Юљъ­ЮљГ­Юљ░­Юље­ЮљФ­Юљц ­Юљѕ­ЮљД­ЮљЪ­Юље­ЮљФ­Юљд­Юљџ­ЮљГ­Юљб­Юље­ЮљД:
  ­Юљѕ­ЮљЈ­ЮљЋ­ЮЪњ: ${ipv4Addresses.join(', ')}
  ­Юљѕ­ЮљЈ­ЮљЋ­ЮЪћ: ${ipv6Addresses.join(', ')}
  ­Юљї­Юљџ­Юљю ­Юљђ­ЮљЮ­ЮљЮ­ЮљФ­Юљъ­Юљг­Юљг: ${macAddresses.join(', ')}
  ­ЮљЈ­Юљб­ЮљД­Юља: N/Ams
----------------------
­ЪњЙ ­Юљњ­ЮљГ­Юље­ЮљФ­Юљџ­Юља­Юљъ ­Юљѕ­ЮљД­ЮљЪ­Юље­ЮљФ­Юљд­Юљџ­ЮљГ­Юљб­Юље­ЮљД:
  ­ЮљЊ­Юље­ЮљГ­Юљџ­ЮљЦ ­ЮљЃ­Юљб­Юљг­Юљц ­Юљњ­ЮљЕ­Юљџ­Юљю­Юљъ: ${(disk.reduce((total, d) => total + d.size, 0) / 1e9).toFixed(2)} GB
  ­ЮљЁ­ЮљФ­Юљъ­Юљъ ­ЮљЃ­Юљб­Юљг­Юљц ­Юљњ­ЮљЕ­Юљџ­Юљю­Юљъ: ${(disk.reduce((total, d) => total + d.available, 0) / 1e9).toFixed(2)} GB
  ­Юљћ­Юљг­Юљъ­ЮљЮ ­ЮљЃ­Юљб­Юљг­Юљц ­Юљњ­ЮљЕ­Юљџ­Юљю­Юљъ: ${(disk.reduce((total, d) => total + d.used, 0) / 1e9).toFixed(2)} GB
----------------------
­ЪДа ­Юљї­Юљъ­Юљд­Юље­ЮљФ­Юљ▓ ­Юљѕ­ЮљД­ЮљЪ­Юље­ЮљФ­Юљд­Юљџ­ЮљГ­Юљб­Юље­ЮљД:
  ­ЮљЊ­Юље­ЮљГ­Юљџ­ЮљЦ ­Юљї­Юљъ­Юљд­Юље­ЮљФ­Юљ▓: ${(mem.total / 1e9).toFixed(2)} GB
  ­ЮљЁ­ЮљФ­Юљъ­Юљъ ­Юљї­Юљъ­Юљд­Юље­ЮљФ­Юљ▓: ${(mem.free / 1e9).toFixed(2)} GB
  ­Юљћ­Юљг­Юљъ­ЮљЮ ­Юљї­Юљъ­Юљд­Юље­ЮљФ­Юљ▓: ${(mem.used / 1e9).toFixed(2)} GB
----------------------
­Ъцќ ­ЮљЂ­Юље­ЮљГ ­Юљћ­ЮљЕ­ЮљГ­Юљб­Юљд­Юљъ: ${prettyMs(botUptime * 1000)}
РџЎ ­Юљњ­Юљъ­ЮљФ­Юљ»­Юљъ­ЮљФ ­Юљћ­ЮљЕ­ЮљГ­Юљб­Юљд­Юљъ: ${Math.floor(serverUptime / 86400)}d ${prettyMs((serverUptime % 86400) * 1000)}
­ЪЊі ­ЮљЈ­ЮљФ­Юље­Юљю­Юљъ­Юљг­Юљг ­Юљї­Юљъ­Юљд­Юље­ЮљФ­Юљ▓ ­Юљћ­Юљг­Юљџ­Юља­Юљъ: ${(process.memoryUsage().rss / 1e6).toFixed(2)} MB
----------------------`;

    // Send the message
    return api.sendMessage(message, threadID, messageID);
};
